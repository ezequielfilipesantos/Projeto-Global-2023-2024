Destination database{CREATE TABLE AgendamentoJuntaMédica (AgendamentoID SERIAL NOT NULL, JuntaMédicaAvaliaçãoAvaliaçãoJuntaMédicaID int4 NOT NULL, DataAgendamentoJuntaMédica date, TipoDeAvaliação varchar(32), PRIMARY KEY (AgendamentoID));
CREATE TABLE JuntaMédicaAvaliação (AvaliaçãoJuntaMédicaID SERIAL NOT NULL, ACES varchar(255), ARS varchar(255), ValorFinalIncapacidade float4, Decisão varchar(255), Notas varchar(255), DataDecisão date, JuntaMédicaJMID int4 NOT NULL, PRIMARY KEY (AvaliaçãoJuntaMédicaID));
CREATE TABLE JuntaMédica (JMID SERIAL NOT NULL, DataConstituição int4, MédicoMedicoID int4 NOT NULL, PRIMARY KEY (JMID));
CREATE TABLE Médico (MedicoID SERIAL NOT NULL, NomeMedico varchar(100), Função varchar(255), Especialidade varchar(100), PRIMARY KEY (MedicoID));
CREATE TABLE PedidoAvaliaçãoMédica (UtenteUtenteID int4 NOT NULL, dataPedido int4, LocalidadePedido int4, TeCAssinado bool, EfeitoIDEfeito int4 NOT NULL, EstadoIDEstado int4 NOT NULL, PRIMARY KEY (UtenteUtenteID));
CREATE TABLE Utente (UtenteID SERIAL NOT NULL, NomeUtente varchar(100), NISS int8, CC varchar(12), LocalidadeEmissãoDSIC varchar(255), DataEmissãoDSIC date, DataValidadeCC date, NIF varchar(9), DataNascimento date, FreguesiaNaturalidade varchar(255), ConcelhoNaturalidade varchar(255), PaisNaturalidade varchar(255), CartãoResidência int4, UtentePréviamenteSubmetidoAJM bool, PRIMARY KEY (UtenteID));
CREATE TABLE EfeitoPedido (IDEfeito SERIAL NOT NULL, Descritivo varchar(255), PRIMARY KEY (IDEfeito));
CREATE TABLE Estado (IDEstado SERIAL NOT NULL, Descritivo varchar(255), PRIMARY KEY (IDEstado));
CREATE TABLE DiagnósticoMédico (DiagnosticoID SERIAL NOT NULL, MedicoMedicoID int4 NOT NULL, AvaliaçãoMédicaIDAvaliação int4 NOT NULL, AvaliaçãoIncapacidade int4, DataDiagnóstico date, PRIMARY KEY (DiagnosticoID));
CREATE TABLE AvaliaçãoMédica (IDAvaliação SERIAL NOT NULL, DetalhesAvaliação varchar(255), GrauIncapacidade float4, dataAvaliação date, PedidoAvaliaçãoMédicaUtenteUtenteID int4 NOT NULL, PRIMARY KEY (IDAvaliação));
CREATE TABLE Incapacidade (IncapacidadeID SERIAL NOT NULL, CondiçãoCondiçãoID int4 NOT NULL, Capitulo int4, Número int4, Alinea int4, NomeIncapacidade varchar(255), CoeficienteMáximo float8, CoeficienteMinimo float8, PRIMARY KEY (IncapacidadeID));
CREATE TABLE UtenteLogin (Email varchar(64) NOT NULL, Password varchar(64), UtenteUtenteID int4 NOT NULL, PRIMARY KEY (Email));
CREATE TABLE Documentos (Ordem int4 NOT NULL, PedidoAvaliaçãoMédicaUtenteUtenteID int4 NOT NULL, Documento varchar(255), PRIMARY KEY (Ordem, PedidoAvaliaçãoMédicaUtenteUtenteID));
CREATE TABLE PedidoJMInfomarçãoAdicional (dataReavaliaçãoPedidoJM date, PedidoAvaliaçãoMédicaUtenteUtenteID int4 NOT NULL);
CREATE TABLE MédicoLogin ("E-Mail" varchar(64) NOT NULL, Password varchar(64), MedicoMedicoID int4 NOT NULL, PRIMARY KEY ("E-Mail"));
CREATE TABLE UtenteContacto (Telefone int4 NOT NULL, UtenteIdentificaçãoUtenteID int4 NOT NULL, PRIMARY KEY (Telefone, UtenteIdentificaçãoUtenteID));
CREATE TABLE UtenteResidênciaCP (CP varchar(100) NOT NULL, Localidade varchar(100), PRIMARY KEY (CP));
CREATE TABLE UtenteResidência (MoradaID SERIAL NOT NULL, RuaResidência varchar(100), DistritoResidência varchar(100), FreguesiaResidência varchar(100), ConcelhoResidência varchar(100), CodigoPostalCP varchar(100) NOT NULL, UtenteIdentificaçãoUtenteID int4 NOT NULL, PRIMARY KEY (MoradaID));
CREATE TABLE Condição (AvaliaçãoMédicaIDAvaliação int4 NOT NULL, IncapacidadeNumeroIncapacidadeID int4 NOT NULL, Coeficiente float4, Desvalorização int4, CapacidadeRestante int4);
CREATE TABLE Médica_Junta (MédicoMedicoID int4 NOT NULL, JuntaMédicaJMID int4 NOT NULL);
ALTER TABLE AgendamentoJuntaMédica ADD CONSTRAINT FKAgendament257599 FOREIGN KEY (JuntaMédicaAvaliaçãoAvaliaçãoJuntaMédicaID) REFERENCES JuntaMédicaAvaliação (AvaliaçãoJuntaMédicaID);
ALTER TABLE JuntaMédicaAvaliação ADD CONSTRAINT FKJuntaMédic976457 FOREIGN KEY (JuntaMédicaJMID) REFERENCES JuntaMédica (JMID);
ALTER TABLE PedidoAvaliaçãoMédica ADD CONSTRAINT FKPedidoAval601144 FOREIGN KEY (UtenteUtenteID) REFERENCES Utente (UtenteID);
ALTER TABLE PedidoAvaliaçãoMédica ADD CONSTRAINT FKPedidoAval946019 FOREIGN KEY (EfeitoIDEfeito) REFERENCES EfeitoPedido (IDEfeito);
ALTER TABLE PedidoAvaliaçãoMédica ADD CONSTRAINT FKPedidoAval992581 FOREIGN KEY (EstadoIDEstado) REFERENCES Estado (IDEstado);
ALTER TABLE DiagnósticoMédico ADD CONSTRAINT FKDiagnóstic779614 FOREIGN KEY (MedicoMedicoID) REFERENCES Médico (MedicoID);
ALTER TABLE DiagnósticoMédico ADD CONSTRAINT FKDiagnóstic392115 FOREIGN KEY (AvaliaçãoMédicaIDAvaliação) REFERENCES AvaliaçãoMédica (IDAvaliação);
ALTER TABLE AvaliaçãoMédica ADD CONSTRAINT FKAvaliaçãoM963314 FOREIGN KEY (PedidoAvaliaçãoMédicaUtenteUtenteID) REFERENCES PedidoAvaliaçãoMédica (UtenteUtenteID);
ALTER TABLE UtenteLogin ADD CONSTRAINT FKUtenteLogi736733 FOREIGN KEY (UtenteUtenteID) REFERENCES Utente (UtenteID);
ALTER TABLE Documentos ADD CONSTRAINT FKDocumentos679363 FOREIGN KEY (PedidoAvaliaçãoMédicaUtenteUtenteID) REFERENCES PedidoAvaliaçãoMédica (UtenteUtenteID);
ALTER TABLE PedidoJMInfomarçãoAdicional ADD CONSTRAINT FKPedidoJMIn583025 FOREIGN KEY (PedidoAvaliaçãoMédicaUtenteUtenteID) REFERENCES PedidoAvaliaçãoMédica (UtenteUtenteID);
ALTER TABLE MédicoLogin ADD CONSTRAINT FKMédicoLogi209529 FOREIGN KEY (MedicoMedicoID) REFERENCES Médico (MedicoID);
ALTER TABLE UtenteContacto ADD CONSTRAINT FKUtenteCont514312 FOREIGN KEY (UtenteIdentificaçãoUtenteID) REFERENCES Utente (UtenteID);
ALTER TABLE UtenteResidência ADD CONSTRAINT FKUtenteResi466631 FOREIGN KEY (CodigoPostalCP) REFERENCES UtenteResidênciaCP (CP);
ALTER TABLE UtenteResidência ADD CONSTRAINT FKUtenteResi488621 FOREIGN KEY (UtenteIdentificaçãoUtenteID) REFERENCES Utente (UtenteID);
ALTER TABLE Condição ADD CONSTRAINT FKCondição384816 FOREIGN KEY (AvaliaçãoMédicaIDAvaliação) REFERENCES AvaliaçãoMédica (IDAvaliação);
ALTER TABLE Condição ADD CONSTRAINT FKCondição967531 FOREIGN KEY (IncapacidadeNumeroIncapacidadeID) REFERENCES Incapacidade (IncapacidadeID);
ALTER TABLE Médica_Junta ADD CONSTRAINT FKMédica_Jun344021 FOREIGN KEY (MédicoMedicoID) REFERENCES Médico (MedicoID);
ALTER TABLE Médica_Junta ADD CONSTRAINT FKMédica_Jun638868 FOREIGN KEY (JuntaMédicaJMID) REFERENCES JuntaMédica (JMID);
ALTER TABLE JuntaMédica ADD CONSTRAINT FKJuntaMédic554304 FOREIGN KEY (MédicoMedicoID) REFERENCES Médico (MedicoID);
-----ADICIONADO----
ALTER TABLE PedidoAvaliaçãoMédica
ADD COLUMN PedidoEnviadoParaJuntaMédica BOOLEAN;

------
ALTER TABLE PedidoAvaliaçãoMédica
ADD COLUMN PedidoAvaliacaoMedicaID SERIAL PRIMARY KEY;

ALTER TABLE PedidoAvaliaçãoMédica DROP CONSTRAINT PedidoAvaliaçãoMédica_pkey;
ALTER TABLE PedidoAvaliaçãoMédica ADD COLUMN PedidoAvaliacaoMedicaID SERIAL PRIMARY KEY;


ALTER TABLE PedidoAvaliaçãoMédica
DROP CONSTRAINT FKPedidoAval601144; -- Drop the existing foreign key constraint

ALTER TABLE PedidoAvaliaçãoMédica
ADD CONSTRAINT FKPedidoAval601144 FOREIGN KEY (UtenteUtenteID) REFERENCES Utente (UtenteID);

ALTER TABLE UtenteResidência RENAME COLUMN UtenteIdentificaçãoUtenteID TO UtenteUtenteID;

--------Documentos .PDF ou outros!
ALTER TABLE Documentos
ALTER COLUMN Documento TYPE bytea;

ALTER TABLE UtenteLogin DROP CONSTRAINT UtenteLogin_pkey;
ALTER TABLE UtenteLogin ADD CONSTRAINT PK_UtenteLogin PRIMARY KEY (UtenteUtenteID);
ALTER TABLE UtenteLogin ADD CONSTRAINT UQ_Email UNIQUE (Email);

ALTER TABLE PedidoAvaliaçãoMédica
ALTER COLUMN dataPedido TYPE DATE USING to_date(dataPedido::TEXT, 'YYYYMMDD');

ALTER TABLE PedidoAvaliaçãoMédica
ALTER COLUMN LocalidadePedido TYPE TEXT;
}


Source DATABASE{CREATE TABLE Utente (utente_ID SERIAL NOT NULL, Nome varchar(255), NISS int8, CC varchar(12), NIF varchar(9), DataNascimento date, Sexo varchar(255), Nacionalidade varchar(255), FreguesiaNaturalidade varchar(255), ConcelhoNaturalidade varchar(255), PaisNaturalidade varchar(255), Validade_Visto_R date, VistoResidência varchar(255), TipoSanguineo varchar(10), PRIMARY KEY (utente_ID));
CREATE TABLE SituaçãoProfissional (SitProfissionalID SERIAL NOT NULL, Profissão varchar(255), Situação_Profissional varchar(255), PRIMARY KEY (SitProfissionalID));
CREATE TABLE UtenteContacto (Contacto_ID SERIAL NOT NULL, Telefone int4, Telemóvel int4, Email varchar(255), PRIMARY KEY (Contacto_ID));
CREATE TABLE CP (CP SERIAL NOT NULL, Localidade varchar(255), PRIMARY KEY (CP));
CREATE TABLE Residência (nacionalidade_ID SERIAL NOT NULL, RuaResidência varchar(255), DistritoResidência varchar(255), FreguesiaResidência varchar(255), ConcelhoResidência varchar(255), CPCP int4 NOT NULL, PRIMARY KEY (nacionalidade_ID));
CREATE TABLE Utente_Residência (Utenteutente_ID int4 NOT NULL, Residêncianacionalidade_ID int4 NOT NULL, PRIMARY KEY (Utenteutente_ID, Residêncianacionalidade_ID));
CREATE TABLE CondiçãoPréExistente (Utenteutente_ID int4 NOT NULL, CondiçãoID SERIAL NOT NULL, NomeCondição int4, Anotação varchar(255), PRIMARY KEY (CondiçãoID));
CREATE TABLE Utente_UtenteContacto (Utenteutente_ID int4 NOT NULL, UtenteContactoContacto_ID int4 NOT NULL, PRIMARY KEY (Utenteutente_ID, UtenteContactoContacto_ID));
CREATE TABLE Utente_SituaçãoProfissional (Utenteutente_ID int4 NOT NULL, SituaçãoProfissionalSitProfissionalID int4 NOT NULL, PRIMARY KEY (Utenteutente_ID, SituaçãoProfissionalSitProfissionalID));

ALTER TABLE Utente_Residência ADD CONSTRAINT FKUtente_Res971028 FOREIGN KEY (Utenteutente_ID) REFERENCES Utente (utente_ID);
ALTER TABLE Utente_Residência ADD CONSTRAINT FKUtente_Res621785 FOREIGN KEY (Residêncianacionalidade_ID) REFERENCES Residência (nacionalidade_ID);
ALTER TABLE Residência ADD CONSTRAINT FKResidência707843 FOREIGN KEY (CPCP) REFERENCES CP (CP);
ALTER TABLE CondiçãoPréExistente ADD CONSTRAINT FKCondiçãoPr307977 FOREIGN KEY (Utenteutente_ID) REFERENCES Utente (utente_ID);
ALTER TABLE Utente_UtenteContacto ADD CONSTRAINT FKUtente_Ute935745 FOREIGN KEY (Utenteutente_ID) REFERENCES Utente (utente_ID);
ALTER TABLE Utente_UtenteContacto ADD CONSTRAINT FKUtente_Ute692493 FOREIGN KEY (UtenteContactoContacto_ID) REFERENCES UtenteContacto (Contacto_ID);
ALTER TABLE Utente_SituaçãoProfissional ADD CONSTRAINT FKUtente_Sit90235 FOREIGN KEY (Utenteutente_ID) REFERENCES Utente (utente_ID);
ALTER TABLE Utente_SituaçãoProfissional ADD CONSTRAINT FKUtente_Sit501272 FOREIGN KEY (SituaçãoProfissionalSitProfissionalID) REFERENCES SituaçãoProfissional (SitProfissionalID);
}